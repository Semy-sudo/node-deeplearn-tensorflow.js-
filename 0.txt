function makeCNN() {
        const model = tf.sequential();
        model.add(tf.layers.conv2d({
            filters: 32,
            kernelSize: 3,
            activation: 'relu',
            inputShape: [imageSize, imageSize, 3],
            strides: 1,
            kernelInitializer: 'varianceScaling'
        }));
        model.add(tf.layers.conv2d({
            filters: 64,
            kernelSize: 3,
            activation: 'relu'
        }));
        model.add(tf.layers.maxPooling2d({
            poolSize: [2, 2]
        }));
        model.add(tf.layers.flatten());
        model.add(tf.layers.dense({
            units: 128,
            activation: 'relu'
        }));
        model.add(tf.layers.dense({
            units: label.length,
            activation: 'softmax'
        }));
        model.compile({
            loss: 'categoricalCrossentropy',
            optimizer: tf.train.adam(),
            metrics: ['accuracy']
        });
        console.log(model.summary());
        return model;
    }